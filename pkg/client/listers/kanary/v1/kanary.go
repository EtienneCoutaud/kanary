/*
Copyright 2018 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/etiennecoutaud/kanary/pkg/apis/kanary/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KanaryLister helps list Kanaries.
type KanaryLister interface {
	// List lists all Kanaries in the indexer.
	List(selector labels.Selector) (ret []*v1.Kanary, err error)
	// Kanaries returns an object that can list and get Kanaries.
	Kanaries(namespace string) KanaryNamespaceLister
	KanaryListerExpansion
}

// kanaryLister implements the KanaryLister interface.
type kanaryLister struct {
	indexer cache.Indexer
}

// NewKanaryLister returns a new KanaryLister.
func NewKanaryLister(indexer cache.Indexer) KanaryLister {
	return &kanaryLister{indexer: indexer}
}

// List lists all Kanaries in the indexer.
func (s *kanaryLister) List(selector labels.Selector) (ret []*v1.Kanary, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Kanary))
	})
	return ret, err
}

// Kanaries returns an object that can list and get Kanaries.
func (s *kanaryLister) Kanaries(namespace string) KanaryNamespaceLister {
	return kanaryNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KanaryNamespaceLister helps list and get Kanaries.
type KanaryNamespaceLister interface {
	// List lists all Kanaries in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.Kanary, err error)
	// Get retrieves the Kanary from the indexer for a given namespace and name.
	Get(name string) (*v1.Kanary, error)
	KanaryNamespaceListerExpansion
}

// kanaryNamespaceLister implements the KanaryNamespaceLister
// interface.
type kanaryNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Kanaries in the indexer for a given namespace.
func (s kanaryNamespaceLister) List(selector labels.Selector) (ret []*v1.Kanary, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Kanary))
	})
	return ret, err
}

// Get retrieves the Kanary from the indexer for a given namespace and name.
func (s kanaryNamespaceLister) Get(name string) (*v1.Kanary, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("kanary"), name)
	}
	return obj.(*v1.Kanary), nil
}
